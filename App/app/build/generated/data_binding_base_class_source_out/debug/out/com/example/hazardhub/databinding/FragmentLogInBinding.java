// Generated by view binder compiler. Do not edit!
package com.example.hazardhub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hazardhub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogInBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button dBtn;

  @NonNull
  public final Button eBtn;

  @NonNull
  public final Button hBtn;

  @NonNull
  public final LogInViewBinding loginFrame;

  @NonNull
  public final TextView registerForm;

  @NonNull
  public final Button vBtn;

  private FragmentLogInBinding(@NonNull LinearLayout rootView, @NonNull Button dBtn,
      @NonNull Button eBtn, @NonNull Button hBtn, @NonNull LogInViewBinding loginFrame,
      @NonNull TextView registerForm, @NonNull Button vBtn) {
    this.rootView = rootView;
    this.dBtn = dBtn;
    this.eBtn = eBtn;
    this.hBtn = hBtn;
    this.loginFrame = loginFrame;
    this.registerForm = registerForm;
    this.vBtn = vBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dBtn;
      Button dBtn = ViewBindings.findChildViewById(rootView, id);
      if (dBtn == null) {
        break missingId;
      }

      id = R.id.eBtn;
      Button eBtn = ViewBindings.findChildViewById(rootView, id);
      if (eBtn == null) {
        break missingId;
      }

      id = R.id.hBtn;
      Button hBtn = ViewBindings.findChildViewById(rootView, id);
      if (hBtn == null) {
        break missingId;
      }

      id = R.id.loginFrame;
      View loginFrame = ViewBindings.findChildViewById(rootView, id);
      if (loginFrame == null) {
        break missingId;
      }
      LogInViewBinding binding_loginFrame = LogInViewBinding.bind(loginFrame);

      id = R.id.register_form;
      TextView registerForm = ViewBindings.findChildViewById(rootView, id);
      if (registerForm == null) {
        break missingId;
      }

      id = R.id.vBtn;
      Button vBtn = ViewBindings.findChildViewById(rootView, id);
      if (vBtn == null) {
        break missingId;
      }

      return new FragmentLogInBinding((LinearLayout) rootView, dBtn, eBtn, hBtn, binding_loginFrame,
          registerForm, vBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
